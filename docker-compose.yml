services:
  web-app: 
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/pilligrim
    env_file: .env
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  database: 
    container_name: postgres
    image: postgres:14.7-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data/

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    env_file: .env
    command: -A config.celery.app worker --loglevel=info --concurrency 1 -E 
    volumes:
      - .:/pilligrim
    links:
      - redis
    depends_on:
      - redis

  beat:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    env_file: .env
    command: -A config.celery.app beat -l info  
    volumes:
      - .:/pilligrim
    links:
      - redis
    depends_on:
      - redis

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A config.celery.app flower --loglevel=info --concurrency 1 -E
    env_file: .env
    volumes:
      - .:/pilligrim
    links:
      - redis
    depends_on:
      - database
      - redis
    ports:
      - "5555:5555"

volumes:
  postgres:
